import os
import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8204345196:AAGa9ckArC5xUNSixAMtwTlY_NMGFYGnzDk"

# –ë–∞–∑–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤ –∏ –∏—Ö —Ç–µ—Ö–∫–∞—Ä—Ç
DRINKS_DATABASE = {
    "–ê—Ñ–æ–≥–∞—Ç–æ": "tech_cards/–ê—Ñ–æ–≥–∞—Ç–æ.png",
    "–í—Ä–µ–º—è –ª–∞–π–º–∞": "tech_cards/–í—Ä–µ–º—è –ª–∞–π–º–∞.png",
    "–ì—É–∞–Ω–∞–±–∞–Ω–∞": "tech_cards/–ì—É–∞–Ω–∞–±–∞–Ω–∞.png",
    "–ö–∞–ø—É—á–∏–Ω–æ –í–∞—Ä–µ–Ω–∞—è —Å–≥—É—â–µ–Ω–∫–∞ —Å —Ö–∞–ª–≤–æ–π": "tech_cards/–ö–∞–ø—É—á–∏–Ω–æ –°–≥—É—â–µ–Ω–∫–∞ —Å —Ö–∞–ª–≤–æ–π.png",
    "–ö–∞—Ä–∏–±—Å–∫–∏–π –∞–Ω–∞–Ω–∞—Å": "tech_cards/–ö–∞—Ä–∏–±—Å–∫–∏–π –∞–Ω–∞–Ω–∞—Å.png",
    "–õ–∏—á–∏-–¥—Ä–∞–≥–æ–Ω—Ñ—Ä—É—Ç": "tech_cards/–õ–∏—á–∏-–¥—Ä–∞–≥–æ–Ω—Ñ—Ä—É—Ç.png",
}

def create_drinks_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–ø–∏—Ç–∫–æ–≤"""
    drinks = list(DRINKS_DATABASE.keys())
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ (–ø–æ 2 –≤ —Ä—è–¥ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã)
    keyboard = []
    for i in range(0, len(drinks), 2):
        row = []
        if i < len(drinks):
            row.append(KeyboardButton(drinks[i]))
        if i + 1 < len(drinks):
            row.append(KeyboardButton(drinks[i + 1]))
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–ø–∏—Ç–∫–∏"
    keyboard.append([KeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–ø–∏—Ç–∫–∏")])
    
    return ReplyKeyboardMarkup(
        keyboard, 
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏ –Ω–∞–ø–∏—Ç–æ–∫ –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"
    )

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    welcome_text = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ—Ö–∫–∞—Ä—Ç –Ω–∞–ø–∏—Ç–∫–æ–≤.

üìù –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–∞–ø–∏—Ç–∫–∞ –Ω–∏–∂–µ, –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ —Ç–µ—Ö–∫–∞—Ä—Ç—É.

‚ú® –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞ –≤—Ä—É—á–Ω—É—é.
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await update.message.reply_text(
        welcome_text,
        reply_markup=create_drinks_keyboard()
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    user_message = update.message.text.strip()
    
    print(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª: '{user_message}'")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–ø–∏—Ç–∫–∏"
    if user_message == "üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–ø–∏—Ç–∫–∏":
        available_drinks = "\n".join([f"‚Ä¢ {drink}" for drink in DRINKS_DATABASE.keys()])
        await update.message.reply_text(
            f"üçπ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏:\n\n{available_drinks}\n\n"
            f"–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–∞–ø–∏—Ç–∫–∞ üëÜ"
        )
        return
    
    # –ò—â–µ–º –Ω–∞–ø–∏—Ç–æ–∫ –≤ –±–∞–∑–µ (—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)
    found_drink = None
    for drink in DRINKS_DATABASE:
        if user_message.lower() == drink.lower():
            found_drink = drink
            break
    
    if found_drink:
        file_path = DRINKS_DATABASE[found_drink]
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –Ω–∞–ø–∏—Ç–æ–∫: {found_drink}, –ø—É—Ç—å: {file_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            try:
                with open(file_path, 'rb') as photo:
                    # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    await update.message.reply_photo(
                        photo=photo,
                        caption=f"üìã –¢–µ—Ö–∫–∞—Ä—Ç–∞: {found_drink}"
                    )
                print(f"‚úÖ –¢–µ—Ö–∫–∞—Ä—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è: {found_drink}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                await update.message.reply_text(
                    "–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫:",
                    reply_markup=create_drinks_keyboard()
                )
                
            except Exception as e:
                await update.message.reply_text(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Ö–∫–∞—Ä—Ç—ã: {str(e)}",
                    reply_markup=create_drinks_keyboard()
                )
        else:
            await update.message.reply_text(
                f"‚ùå –§–∞–π–ª —Ç–µ—Ö–∫–∞—Ä—Ç—ã –¥–ª—è '{found_drink}' –Ω–µ –Ω–∞–π–¥–µ–Ω\n"
                f"–ü—É—Ç—å: {file_path}",
                reply_markup=create_drinks_keyboard()
            )
    else:
        # –ï—Å–ª–∏ –Ω–∞–ø–∏—Ç–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        await update.message.reply_text(
            f"‚ùå –ù–∞–ø–∏—Ç–æ–∫ '{user_message}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
            f"–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–∞–ø–∏—Ç–∫–∞ –Ω–∏–∂–µ üëá",
            reply_markup=create_drinks_keyboard()
        )

async def show_menu_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /menu - –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫"""
    await update.message.reply_text(
        "üçπ –í—ã–±–µ—Ä–∏ –Ω–∞–ø–∏—Ç–æ–∫:",
        reply_markup=create_drinks_keyboard()
    )

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"""
    logging.error(f"–û—à–∏–±–∫–∞: {context.error}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ç–µ—Ö–∫–∞—Ä—Ç
    os.makedirs("tech_cards", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("menu", show_menu_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("üìä –ù–∞–ø–∏—Ç–∫–∏ –≤ –±–∞–∑–µ:", list(DRINKS_DATABASE.keys()))
    print("‚èπÔ∏è  –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞, –Ω–∞–∂–º–∏ Ctrl+C")
    application.run_polling()

if __name__ == "__main__":
    main()